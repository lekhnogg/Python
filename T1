import requests
from bs4 import BeautifulSoup
import re

def decoding_secret_message(url):
    """
    Takes in google google doc url and returns the secret message.

    Args:
        url (str): The URL of the Google Doc containing the secret message.
    """
    # Get the document content
    response = requests.get(url)
    response.raise_for_status()  # Raise an error if the request fails
    html_content = response.text

    # Parse HTML using BeautifulSoup
    soup = BeautifulSoup(html_content, "html.parser")
    content = soup.get_text()  # Extract plain text from HTML

    # Add spaces before and after the grid characters, and after third digit to split entries correctly
    content = re.sub(r"(\d)([^\d\s])(\d)", r"\1 \2 \3 ", content)

    # Use Regex pattern to find 'x unicode y' pattern
    matches = re.findall(r"(\d+)\s*([^\d\s])\s*(\d+)", content)

    # Build a list of tuples for the data to extract from
    data = []
    for match in matches:
        x, char, y = match
        data.append((int(x), int(y), char))

    # Find the maximum grid dimensions, min is always 0
    max_x = max(x for x, y, char in data)
    max_y = max(y for x, y, char in data)

    # Initialize an empty grid with spaces
    grid = [[" " for _ in range(max_x + 1)] for _ in range(max_y + 1)]

    # Populate the grid with corresponding characters
    for x, y, char in data:
        grid[y][x] = char

    # Print the grid in reversed order to display the secret message
    for row in reversed(grid):
        print("".join(row))

# Run using given example doc    
if __name__ == "__main__":
    url = "https://docs.google.com/document/d/e/2PACX-1vShuWova56o7XS1S3LwEIzkYJA8pBQENja01DNnVDorDVXbWakDT4NioAScvP1OCX6eeKSqRyzUW_qJ/pub"
    decoding_secret_message(url)
